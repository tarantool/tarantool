name: osx_11_0

on:
  push:
  pull_request:
  repository_dispatch:
    types: [backend_automation]
  workflow_dispatch:

concurrency:
  # Update of a developer branch cancels the previously scheduled workflow
  # run for this branch. However, the 'master' branch, release branch (1.10,
  # 2.8, etc.), and tag workflow runs are never canceled.
  #
  # We use a trick here: define the concurrency group as 'workflow run ID' +
  # 'workflow run attempt' because it is a unique combination for any run.
  # So it effectively discards grouping.
  #
  # Important: we cannot use `github.sha` as a unique identifier because
  # pushing a tag may cancel a run that works on a branch push event.
  group: ${{ (
    github.ref == 'refs/heads/master' ||
    github.ref == 'refs/heads/1.10' ||
    startsWith(github.ref, 'refs/heads/2.') ||
    startsWith(github.ref, 'refs/tags/')) &&
    format('{0}-{1}', github.run_id, github.run_attempt) ||
    format('{0}-{1}', github.workflow, github.ref) }}
  cancel-in-progress: true

env:
  CI_MAKE: make -f .travis.mk

jobs:
  osx_11_0:
    # We want to run on external PRs, but not on our own internal PRs
    # as they'll be run by the push to the branch.
    if: ( github.event_name == 'push' ||
        github.event.pull_request.head.repo.full_name != github.repository ) &&
        ! endsWith(github.ref, '-notest')

    runs-on: macos-11.0

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
          submodules: recursive
      - uses: ./.github/actions/environment
      - name: test
        env:
          CMAKE_BUILD_TYPE: RelWithDebInfo
          CMAKE_EXTRA_PARAMS: -DENABLE_WERROR=ON
        run: ${CI_MAKE} test_osx_github_actions
      - name: call action to send Telegram message on failure
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_CORE_TOKEN }}
          TELEGRAM_TO: ${{ secrets.TELEGRAM_CORE_TO }}
        uses: ./.github/actions/send-telegram-notify
        if: failure()
      - name: artifacts
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: osx_11_0
          retention-days: 21
          path: ${{ env.VARDIR }}/artifacts
