name: 'Send Telegram message on failure'
description: 'Send message to Telegram channel/bot on failure'
runs:
  using: "composite"
  steps:
    # install 'requests' Python module
    - run: |
        python3 -m pip install --upgrade pip ||:
        pip3 install requests ||:
      shell: bash
    # logout github environment
    - env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
      shell: bash
    # extract branch name
    - run: |
        branch_name=${{ github.head_ref }}
        if ${{ github.event_name != 'pull_request' }} ; then
          branch_name=${{ github.ref }}
          branch_name=${branch_name#refs/heads/}
        fi
        echo BRANCH_NAME=$branch_name | tee -a $GITHUB_ENV
      shell: bash
    # get host kernel name
    - run: |
        echo 'KERNEL_NAME<<EOF' >> $GITHUB_ENV
        uname -s | tee -a $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
      shell: bash
    # check if host OS is rhel or fedora
    - run: |
        echo 'OS_IS_FEDORA_OR_RHEL<<EOF' >> $GITHUB_ENV
        grep "^ID=" /etc/os-release | grep -e 'centos' -e 'fedora' && echo true | tee -a $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
      shell: bash
    # get job id number
    - run: |
        sudo -n apt update -y ||:
        sudo -n apt install -y jq ||:
        echo 'JOB_ID<<EOF' >> $GITHUB_ENV
        curl -s https://api.github.com/repos/tarantool/tarantool/actions/runs/${{ github.run_id }}/jobs | jq -r '.jobs[0].id' | tee -a $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
      shell: bash
    # convert commit message to single line with marked new lines as 'TELEGRAMNEWLINE'
    - env:
        COMMIT_MSG: |
          ${{ github.event.head_commit.message }}
      run: |
        # Make changes in the commit message to avoid of its fail on Markdown:
        # 1. Convert message from multi lines to single line.
        # 2. Add backslashes to single quote marks in message.
        # 3. Add backslashes to '`' in message.
        if ${{ env.OS_IS_FEDORA_OR_RHEL == 'true' }} || ${{ env.KERNEL_NAME == 'Darwin' }} ; then
          msg="${COMMIT_MSG//$'\n'/TELEGRAMNEWLINE}"
          msg="${msg//$'\\\\'/BACKSLASH}"
          msg="${msg//$'\\\''/\'}"
          msg="${msg//$'\`'/BACKTICK}"
        else
          msg="${COMMIT_MSG//$'\n'/TELEGRAMNEWLINE}"
          msg="${msg//$'\\'/BACKSLASH}"
          msg="${msg//$'\''/\\\'}"
          msg="${msg//$'`'/BACKTICK}"
        fi
        echo 'COMMIT_MSG_LINE<<EOF' >> $GITHUB_ENV
        echo "$msg" | tee -a $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
      shell: bash
    # strip Markdown from commit message
    - run: |
        pip3 install setuptools
        pip3 install markdown bs4
        echo "Sending commit message part as a single line: ${{ env.COMMIT_MSG_LINE }}"
        msg=`python3 -c "import markdown ; \\
          from bs4 import BeautifulSoup ; \\
          md = markdown.markdown(\"${{ env.COMMIT_MSG_LINE }}\") ; \\
          soup = BeautifulSoup(md, features='html.parser') ; \\
          print(soup.get_text())"`
        echo "Sending commit message part as a single line: $msg"
        echo 'COMMIT_MSG<<EOF' >> $GITHUB_ENV
          if ${{ env.OS_IS_FEDORA_OR_RHEL == 'true' }} || ${{ env.KERNEL_NAME == 'Darwin' }} ; then
            echo $msg | sed "s#TELEGRAMNEWLINE#\\\n#g" | tee -a $GITHUB_ENV
          else
            echo $msg | sed "s#TELEGRAMNEWLINE#\n#g" | tee -a $GITHUB_ENV
          fi
        echo 'EOF' >> $GITHUB_ENV
      shell: bash
    - env:
        MSG: |
          ðŸ”´ Workflow testing failed:
          Job: [ `${{ github.job }}`](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          Log: [ `#${{ env.JOB_ID }}`](https://github.com/${{ github.repository }}/runs/${{ env.JOB_ID }})
          Commit: [ `${{ github.sha }}`](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          Branch: [ `${{ env.BRANCH_NAME }}`](https://github.com/${{ github.repository }}/tree/${{ env.BRANCH_NAME }})
          History: [commits](https://github.com/${{ github.repository }}/commits/${{ github.sha }})
          Triggered on: `${{ github.event_name }}`
          Committer: `${{ github.actor }}`
          ```
          ---------------- Commit message -------------------
          ${{ env.COMMIT_MSG }}
          ```
      run: |
        # convert message from multi lines to single line and
        # add backslashes to single quote marks in message
        if ${{ env.OS_IS_FEDORA_OR_RHEL == 'true' }} || ${{ env.KERNEL_NAME == 'Darwin' }} ; then
          msg="${MSG//$'\n'/\n}"
          msg="${msg//$'\\\''/\'}"
        else
          msg="${MSG//$'\n'/'\n'}"
          msg="${msg//$'\''/\\\'}"
        fi
        echo "Sending message: $msg"
        # select target channel
        send_to=$TELEGRAM_TO
        if ${{ github.ref != 'refs/heads/master' &&
            github.ref != 'refs/heads/1.10' &&
            ! startsWith(github.ref, 'refs/heads/2.') &&
            ! startsWith(github.ref, 'refs/tags') }} ; then
          send_to=${send_to}_${{ github.actor }}
          ignore_fail=1
          echo "Sending message to '$send_to' developer's chat"
        fi
        # Use MarkdownV2 while Markdown is legacy
        # https://core.telegram.org/bots/api#markdownv2-style
        set +e
        python3 -c "from urllib import request, parse ; \\
          url = 'https://api.telegram.org/bot%s/sendMessage' % ('$TELEGRAM_TOKEN') ; \\
          data = parse.urlencode({'chat_id' : '$send_to', 'parse_mode' : 'MarkdownV2', 'disable_web_page_preview' : 'true', 'text' : '$msg'}).encode('ascii') ; \\
          response = request.urlopen(url=url, data=data, timeout=10) ; \\
          print(response.read())"
        rc=$?
        set -e
        if [ "${rc}" != 0 ]; then
          if [ "${ignore_fail}" = 1 ]; then
            echo "WARN: Sending the Telegram message to '$send_to' fails"
            echo "WARN:"
            echo "WARN: The Telegram notification action cannot send a personal"
            echo "WARN: notification if a developer does not create a Telegram"
            echo "WARN: chat that corresponds to its GitHub username. See [1]"
            echo "WARN: for details."
            echo "WARN:"
            echo "WARN: [1]: https://github.com/tarantool/tarantool/blob/master/.github/actions/send-telegram-notify/README.md"
          else
            echo "ERROR: Sending the Telegram message to '$send_to' fails"
            false
          fi
        fi
      shell: bash
