[
  {
    "subtests": [
      "HTBench<Light>/LightInsertRandValue/10000",
      "HTBench<Light>/LightInsertRandValue/100000",
      "HTBench<Light>/LightInsertRandValue/1000000",
      "HTBench<STL>/STLInsertRandValue/10000",
      "HTBench<STL>/STLInsertRandValue/100000",
      "HTBench<STL>/STLInsertRandValue/1000000",
      "HTBench<Light>/LightInsertRandValueReserve/10000",
      "HTBench<Light>/LightInsertRandValueReserve/100000",
      "HTBench<Light>/LightInsertRandValueReserve/1000000",
      "HTBench<STL>/STLInsertRandValueReserve/10000",
      "HTBench<STL>/STLInsertRandValueReserve/100000",
      "HTBench<STL>/STLInsertRandValueReserve/1000000",
      "HTBench<Light>/LightFindRandValue/10000",
      "HTBench<Light>/LightFindRandValue/100000",
      "HTBench<Light>/LightFindRandValue/1000000",
      "HTBench<STL>/STLFindRandValue/10000",
      "HTBench<STL>/STLFindRandValue/100000",
      "HTBench<STL>/STLFindRandValue/1000000",
      "HTBench<Light>/LightFindRandValueWithMisses/10000",
      "HTBench<Light>/LightFindRandValueWithMisses/100000",
      "HTBench<Light>/LightFindRandValueWithMisses/1000000",
      "HTBench<STL>/STLFindRandValueWithMisses/10000",
      "HTBench<STL>/STLFindRandValueWithMisses/100000",
      "HTBench<STL>/STLFindRandValueWithMisses/1000000",
      "HTBench<Light>/LightFindRandByKey/10000",
      "HTBench<Light>/LightFindRandByKey/100000",
      "HTBench<Light>/LightFindRandByKey/1000000",
      "HTBench<STL>/STLFindRandByKey/10000",
      "HTBench<STL>/STLFindRandByKey/100000",
      "HTBench<STL>/STLFindRandByKey/1000000",
      "HTBench<Light>/LightSequenceIteration/10000",
      "HTBench<Light>/LightSequenceIteration/100000",
      "HTBench<Light>/LightSequenceIteration/1000000",
      "HTBench<STL>/STLSequenceIteration/10000",
      "HTBench<STL>/STLSequenceIteration/100000",
      "HTBench<STL>/STLSequenceIteration/1000000",
      "HTBench<Light>/LightInsertAfterErase/10000",
      "HTBench<Light>/LightInsertAfterErase/100000",
      "HTBench<Light>/LightInsertAfterErase/1000000",
      "HTBench<STL>/STLInsertAfterErase/10000",
      "HTBench<STL>/STLInsertAfterErase/100000",
      "HTBench<STL>/STLInsertAfterErase/1000000",
      "HTBench<Light>/LightFindAfterErase/10000",
      "HTBench<Light>/LightFindAfterErase/100000",
      "HTBench<Light>/LightFindAfterErase/1000000",
      "HTBench<STL>/STLFindAfterErase/10000",
      "HTBench<STL>/STLFindAfterErase/100000",
      "HTBench<STL>/STLFindAfterErase/1000000",
      "HTBench<Light>/LightInsertOrFind/10000",
      "HTBench<Light>/LightInsertOrFind/100000",
      "HTBench<Light>/LightInsertOrFind/1000000",
      "HTBench<STL>/STLInsertOrFind/10000",
      "HTBench<STL>/STLInsertOrFind/100000",
      "HTBench<STL>/STLInsertOrFind/1000000",
      "HTBench<Light>/LightDeleteRandValue/10000",
      "HTBench<Light>/LightDeleteRandValue/100000",
      "HTBench<Light>/LightDeleteRandValue/1000000",
      "HTBench<STL>/STLDeleteRandValue/10000",
      "HTBench<STL>/STLDeleteRandValue/100000",
      "HTBench<STL>/STLDeleteRandValue/1000000"
    ],
    "bench_name": "light"
  },
  {
    "subtests": [
      "MemtxFixture/TreeGetRandomExistingKeys",
      "MemtxFixture/TreeGet1RandomExistingKey",
      "MemtxFixture/TreeSelectAll",
      "MemtxFixture/TreeReplaceRandomExistingKeys"
    ],
    "bench_name": "memtx"
  },
  {
    "subtests": [
      "bench_tuple_new<FORMAT_BASIC>",
      "bench_tuple_new<FORMAT_SPARSE>",
      "bench_tuple_delete<FORMAT_BASIC>",
      "bench_tuple_ref_unref_low<FORMAT_BASIC>",
      "bench_tuple_ref_unref_high<FORMAT_BASIC>",
      "tuple_access_members<FORMAT_BASIC>",
      "tuple_access_data<FORMAT_BASIC>",
      "tuple_access_data_range<FORMAT_BASIC>",
      "tuple_access_unindexed_field<FORMAT_BASIC>",
      "tuple_access_indexed_field<FORMAT_BASIC>",
      "tuple_tuple_compare<FORMAT_BASIC>",
      "tuple_tuple_hash_fast_one_uint",
      "tuple_tuple_hash_fast_multiple_fields",
      "tuple_tuple_hash_slow",
      "tuple_tuple_compare_hint<FORMAT_BASIC>"
    ],
    "bench_name": "tuple"
  },
  {
    "subtests": [
      "tree_i64_build_size_1000000",
      "treecc_i64_build_size_1000000",
      "treeic_i64_build_size_1000000",
      "tree_i64_find_first_size_1000000",
      "treecc_i64_find_first_size_1000000",
      "treeic_i64_find_first_size_1000000",
      "tree_i64_find_first_height_1",
      "treecc_i64_find_first_height_1",
      "treeic_i64_find_first_height_1",
      "tree_i64_find_first_height_2",
      "treecc_i64_find_first_height_2",
      "treeic_i64_find_first_height_2",
      "tree_i64_find_first_height_3",
      "treecc_i64_find_first_height_3",
      "treeic_i64_find_first_height_3",
      "tree_i64_find_first_height_4",
      "treecc_i64_find_first_height_4",
      "treeic_i64_find_first_height_4",
      "tree_i64_find_last_size_1000000",
      "treecc_i64_find_last_size_1000000",
      "treeic_i64_find_last_size_1000000",
      "tree_i64_find_last_height_1",
      "treecc_i64_find_last_height_1",
      "treeic_i64_find_last_height_1",
      "tree_i64_find_last_height_2",
      "treecc_i64_find_last_height_2",
      "treeic_i64_find_last_height_2",
      "tree_i64_find_last_height_3",
      "treecc_i64_find_last_height_3",
      "treeic_i64_find_last_height_3",
      "tree_i64_find_last_height_4",
      "treecc_i64_find_last_height_4",
      "treeic_i64_find_last_height_4",
      "tree_i64_find_inc_size_1000000",
      "treecc_i64_find_inc_size_1000000",
      "treeic_i64_find_inc_size_1000000",
      "tree_i64_find_inc_height_1",
      "treecc_i64_find_inc_height_1",
      "treeic_i64_find_inc_height_1",
      "tree_i64_find_inc_height_2",
      "treecc_i64_find_inc_height_2",
      "treeic_i64_find_inc_height_2",
      "tree_i64_find_inc_height_3",
      "treecc_i64_find_inc_height_3",
      "treeic_i64_find_inc_height_3",
      "tree_i64_find_inc_height_4",
      "treecc_i64_find_inc_height_4",
      "treeic_i64_find_inc_height_4",
      "tree_i64_find_dec_size_1000000",
      "treecc_i64_find_dec_size_1000000",
      "treeic_i64_find_dec_size_1000000",
      "tree_i64_find_dec_height_1",
      "treecc_i64_find_dec_height_1",
      "treeic_i64_find_dec_height_1",
      "tree_i64_find_dec_height_2",
      "treecc_i64_find_dec_height_2",
      "treeic_i64_find_dec_height_2",
      "tree_i64_find_dec_height_3",
      "treecc_i64_find_dec_height_3",
      "treeic_i64_find_dec_height_3",
      "tree_i64_find_dec_height_4",
      "treecc_i64_find_dec_height_4",
      "treeic_i64_find_dec_height_4",
      "tree_i64_find_rand_size_1000000",
      "treecc_i64_find_rand_size_1000000",
      "treeic_i64_find_rand_size_1000000",
      "tree_i64_find_rand_height_1",
      "treecc_i64_find_rand_height_1",
      "treeic_i64_find_rand_height_1",
      "tree_i64_find_rand_height_2",
      "treecc_i64_find_rand_height_2",
      "treeic_i64_find_rand_height_2",
      "tree_i64_find_rand_height_3",
      "treecc_i64_find_rand_height_3",
      "treeic_i64_find_rand_height_3",
      "tree_i64_find_rand_height_4",
      "treecc_i64_find_rand_height_4",
      "treeic_i64_find_rand_height_4",
      "tree_i64_delete_insert_first_size_1000000",
      "treecc_i64_delete_insert_first_size_1000000",
      "treeic_i64_delete_insert_first_size_1000000",
      "tree_i64_delete_insert_first_height_1",
      "treecc_i64_delete_insert_first_height_1",
      "treeic_i64_delete_insert_first_height_1",
      "tree_i64_delete_insert_first_height_2",
      "treecc_i64_delete_insert_first_height_2",
      "treeic_i64_delete_insert_first_height_2",
      "tree_i64_delete_insert_first_height_3",
      "treecc_i64_delete_insert_first_height_3",
      "treeic_i64_delete_insert_first_height_3",
      "tree_i64_delete_insert_first_height_4",
      "treecc_i64_delete_insert_first_height_4",
      "treeic_i64_delete_insert_first_height_4",
      "tree_i64_delete_insert_last_size_1000000",
      "treecc_i64_delete_insert_last_size_1000000",
      "treeic_i64_delete_insert_last_size_1000000",
      "tree_i64_delete_insert_last_height_1",
      "treecc_i64_delete_insert_last_height_1",
      "treeic_i64_delete_insert_last_height_1",
      "tree_i64_delete_insert_last_height_2",
      "treecc_i64_delete_insert_last_height_2",
      "treeic_i64_delete_insert_last_height_2",
      "tree_i64_delete_insert_last_height_3",
      "treecc_i64_delete_insert_last_height_3",
      "treeic_i64_delete_insert_last_height_3",
      "tree_i64_delete_insert_last_height_4",
      "treecc_i64_delete_insert_last_height_4",
      "treeic_i64_delete_insert_last_height_4",
      "tree_i64_delete_insert_inc_size_1000000",
      "treecc_i64_delete_insert_inc_size_1000000",
      "treeic_i64_delete_insert_inc_size_1000000",
      "tree_i64_delete_insert_inc_height_1",
      "treecc_i64_delete_insert_inc_height_1",
      "treeic_i64_delete_insert_inc_height_1",
      "tree_i64_delete_insert_inc_height_2",
      "treecc_i64_delete_insert_inc_height_2",
      "treeic_i64_delete_insert_inc_height_2",
      "tree_i64_delete_insert_inc_height_3",
      "treecc_i64_delete_insert_inc_height_3",
      "treeic_i64_delete_insert_inc_height_3",
      "tree_i64_delete_insert_inc_height_4",
      "treecc_i64_delete_insert_inc_height_4",
      "treeic_i64_delete_insert_inc_height_4",
      "tree_i64_delete_insert_dec_size_1000000",
      "treecc_i64_delete_insert_dec_size_1000000",
      "treeic_i64_delete_insert_dec_size_1000000",
      "tree_i64_delete_insert_dec_height_1",
      "treecc_i64_delete_insert_dec_height_1",
      "treeic_i64_delete_insert_dec_height_1",
      "tree_i64_delete_insert_dec_height_2",
      "treecc_i64_delete_insert_dec_height_2",
      "treeic_i64_delete_insert_dec_height_2",
      "tree_i64_delete_insert_dec_height_3",
      "treecc_i64_delete_insert_dec_height_3",
      "treeic_i64_delete_insert_dec_height_3",
      "tree_i64_delete_insert_dec_height_4",
      "treecc_i64_delete_insert_dec_height_4",
      "treeic_i64_delete_insert_dec_height_4",
      "tree_i64_delete_insert_rand_size_1000000",
      "treecc_i64_delete_insert_rand_size_1000000",
      "treeic_i64_delete_insert_rand_size_1000000",
      "tree_i64_delete_insert_rand_height_1",
      "treecc_i64_delete_insert_rand_height_1",
      "treeic_i64_delete_insert_rand_height_1",
      "tree_i64_delete_insert_rand_height_2",
      "treecc_i64_delete_insert_rand_height_2",
      "treeic_i64_delete_insert_rand_height_2",
      "tree_i64_delete_insert_rand_height_3",
      "treecc_i64_delete_insert_rand_height_3",
      "treeic_i64_delete_insert_rand_height_3",
      "tree_i64_delete_insert_rand_height_4",
      "treecc_i64_delete_insert_rand_height_4",
      "treeic_i64_delete_insert_rand_height_4",
      "tree_i64_insert_first_size_1000000/iterations:1000000",
      "treecc_i64_insert_first_size_1000000/iterations:1000000",
      "treeic_i64_insert_first_size_1000000/iterations:1000000",
      "tree_i64_insert_last_size_1000000/iterations:1000000",
      "treecc_i64_insert_last_size_1000000/iterations:1000000",
      "treeic_i64_insert_last_size_1000000/iterations:1000000",
      "tree_i64_insert_rand_size_1000000/iterations:1000000",
      "treecc_i64_insert_rand_size_1000000/iterations:1000000",
      "treeic_i64_insert_rand_size_1000000/iterations:1000000",
      "tree_i64_delete_first_size_1000000/iterations:1000000",
      "treecc_i64_delete_first_size_1000000/iterations:1000000",
      "treeic_i64_delete_first_size_1000000/iterations:1000000",
      "tree_i64_delete_last_size_1000000/iterations:1000000",
      "treecc_i64_delete_last_size_1000000/iterations:1000000",
      "treeic_i64_delete_last_size_1000000/iterations:1000000",
      "tree_i64_delete_rand_size_1000000/iterations:1000000",
      "treecc_i64_delete_rand_size_1000000/iterations:1000000",
      "treeic_i64_delete_rand_size_1000000/iterations:1000000"
    ],
    "bench_name": "bps_tree"
  },
  {
    "subtests": [
      "number",
      "string",
      "decimal"
    ],
    "bench_name": "tuple_field_by_name"
  },
  {
    "subtests": [
      "drop_while",
      "drop_while.drop_all",
      "drop_while.drop_none"
    ],
    "bench_name": "luafun"
  },
  {
    "subtests": [
      "walmode_none"
    ],
    "bench_name": "gh-7089-vclock-copy"
  },
  {
    "subtests": [
      "1mops_master"
    ],
    "bench_name": "1mops_write"
  },
  {
    "subtests": [
      "uri.escape",
      "uri.unescape"
    ],
    "bench_name": "uri_escape_unescape"
  },
  {
    "subtests": [
      "small_workload_benchmark/slab_size:4194304/size_min:27/size_max:90/prealloc:1048575/mask:63/alloc_factor_idx:0",
      "small_workload_benchmark/slab_size:4194304/size_min:27/size_max:90/prealloc:1048575/mask:63/alloc_factor_idx:1",
      "small_workload_benchmark/slab_size:4194304/size_min:1409/size_max:9600/prealloc:262143/mask:8191/alloc_factor_idx:0",
      "small_workload_benchmark/slab_size:4194304/size_min:1409/size_max:9600/prealloc:262143/mask:8191/alloc_factor_idx:1",
      "small_workload_benchmark/slab_size:8388608/size_min:27/size_max:90/prealloc:1048575/mask:63/alloc_factor_idx:0",
      "small_workload_benchmark/slab_size:8388608/size_min:27/size_max:90/prealloc:1048575/mask:63/alloc_factor_idx:1",
      "small_workload_benchmark/slab_size:8388608/size_min:1409/size_max:9600/prealloc:262143/mask:8191/alloc_factor_idx:0",
      "small_workload_benchmark/slab_size:8388608/size_min:1409/size_max:9600/prealloc:262143/mask:8191/alloc_factor_idx:1",
      "small_workload_benchmark/slab_size:16777216/size_min:27/size_max:90/prealloc:1048575/mask:63/alloc_factor_idx:0",
      "small_workload_benchmark/slab_size:16777216/size_min:27/size_max:90/prealloc:1048575/mask:63/alloc_factor_idx:1",
      "small_workload_benchmark/slab_size:16777216/size_min:1409/size_max:9600/prealloc:262143/mask:8191/alloc_factor_idx:0",
      "small_workload_benchmark/slab_size:16777216/size_min:1409/size_max:9600/prealloc:262143/mask:8191/alloc_factor_idx:1"
    ],
    "bench_name": "small"
  },
  {
    "subtests": [
      "insert"
    ],
    "bench_name": "column_insert"
  },
  {
    "subtests": [
      "get_0",
      "get_1",
      "select_0",
      "select_1",
      "select_5",
      "select_10",
      "select_after_0",
      "select_after_1",
      "select_after_5",
      "select_after_10",
      "select_fetch_pos_0",
      "select_fetch_pos_1",
      "select_fetch_pos_5",
      "select_fetch_pos_10",
      "pairs_0",
      "pairs_1",
      "pairs_5",
      "pairs_10",
      "pairs_after_0",
      "pairs_after_1",
      "pairs_after_5",
      "pairs_after_10",
      "tuple_pos"
    ],
    "bench_name": "box_select"
  },
  {
    "subtests": [
      "sum_first",
      "sum_last"
    ],
    "bench_name": "column_scan"
  }
]
