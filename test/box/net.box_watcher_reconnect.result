-- test-run result file version 2
test_run = require('test_run').new()
 | ---
 | ...
fiber = require('fiber')
 | ---
 | ...
net = require('net.box')
 | ---
 | ...
errinj = box.error.injection
 | ---
 | ...

--
-- Check that net.box watchers are resubscribed after reconnect.
--
timeout = 0.01
 | ---
 | ...
conn = net.connect(box.cfg.listen, {reconnect_after = timeout})
 | ---
 | ...

count = 0
 | ---
 | ...
key = nil
 | ---
 | ...
value = nil
 | ---
 | ...
w = conn:watch('foo', function(k, v) count = count + 1 key = k value = v end)
 | ---
 | ...
test_run:wait_cond(function() return count == 1 end)
 | ---
 | - true
 | ...
assert(count == 1)
 | ---
 | - true
 | ...
assert(key == 'foo')
 | ---
 | - true
 | ...
assert(value == nil)
 | ---
 | - true
 | ...

errinj.set('ERRINJ_NETBOX_IO_ERROR', true)
 | ---
 | - ok
 | ...
conn:ping({timeout = timeout})
 | ---
 | - false
 | ...
conn.error
 | ---
 | - Error injection
 | ...
box.broadcast('foo', 'bar')
 | ---
 | ...
fiber.sleep(timeout)
 | ---
 | ...
assert(count == 1)
 | ---
 | - true
 | ...
errinj.set('ERRINJ_NETBOX_IO_ERROR', false)
 | ---
 | - ok
 | ...
test_run:wait_cond(function() return count == 2 end)
 | ---
 | - true
 | ...
assert(count == 2)
 | ---
 | - true
 | ...
assert(key == 'foo')
 | ---
 | - true
 | ...
assert(value == 'bar')
 | ---
 | - true
 | ...

box.broadcast('foo', 'baz')
 | ---
 | ...
test_run:wait_cond(function() return count == 3 end)
 | ---
 | - true
 | ...
assert(count == 3)
 | ---
 | - true
 | ...
assert(key == 'foo')
 | ---
 | - true
 | ...
assert(value == 'baz')
 | ---
 | - true
 | ...

conn:close()
 | ---
 | ...
box.broadcast('foo')
 | ---
 | ...
