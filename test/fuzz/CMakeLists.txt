# Added for autogenerated headers and LuaJIT ones.
include_directories(${PROJECT_SOURCE_DIR}/src)
include_directories(${PROJECT_BINARY_DIR}/src)
include_directories(${PROJECT_SOURCE_DIR}/src/box)

# A special target with fuzzer and sanitizer flags.
add_library(fuzzer_config INTERFACE)

target_compile_options(
    fuzzer_config
    INTERFACE
        $<$<NOT:$<BOOL:${OSS_FUZZ}>>:
        -fsanitize=fuzzer
        -fsanitize-coverage=trace-cmp
        -fprofile-instr-generate
        -fcoverage-mapping
        -g
        >
        $<$<BOOL:${OSS_FUZZ}>:
        ${CXX}
        ${CXXFLAGS}
        >
)
target_link_libraries(
    fuzzer_config
    INTERFACE
        $<$<NOT:$<BOOL:${OSS_FUZZ}>>:
        -fsanitize=fuzzer
        -fsanitize-coverage=trace-cmp
        -fprofile-instr-generate
        -fcoverage-mapping
        -g
        >
        $<$<BOOL:${OSS_FUZZ}>:
        $ENV{LIB_FUZZING_ENGINE}
        >
)

set(FUZZ_TEST_TARGETS "")

function(create_fuzz_test)
  cmake_parse_arguments(
    FUZZ
    ""
    "PREFIX"
    "SOURCES;LIBRARIES"
    ${ARGN}
  )
  message(STATUS "Creating fuzz test ${FUZZ_PREFIX}_fuzzer")
  add_executable(${FUZZ_PREFIX}_fuzzer ${FUZZ_SOURCES})
  # Use PUBLIC to force 'fuzzer_config' for all dependent targets.
  target_link_libraries(${FUZZ_PREFIX}_fuzzer PUBLIC ${FUZZ_LIBRARIES})
  set(FUZZ_TEST_TARGETS ${FUZZ_TEST_TARGETS} ${FUZZ_PREFIX}_fuzzer PARENT_SCOPE)
endfunction()

create_fuzz_test(PREFIX csv
                 SOURCES csv_fuzzer.c
                 LIBRARIES csv fuzzer_config
)

create_fuzz_test(PREFIX uri
                 SOURCES uri_fuzzer.c
                 LIBRARIES uri fuzzer_config
)

create_fuzz_test(PREFIX http_parser
                 SOURCES http_parser_fuzzer.c
                 LIBRARIES http_parser fuzzer_config
)

create_fuzz_test(PREFIX swim_proto_member
                 SOURCES swim_proto_member_fuzzer.c
                 LIBRARIES swim fuzzer_config
)

create_fuzz_test(PREFIX swim_proto_meta
                 SOURCES swim_proto_meta_fuzzer.c
                 LIBRARIES swim fuzzer_config
)

create_fuzz_test(PREFIX datetime_parse_full
                 SOURCES datetime_parse_full_fuzzer.c
                 LIBRARIES core fuzzer_config
)

create_fuzz_test(PREFIX datetime_strptime
                 SOURCES datetime_strptime_fuzzer.c
                 LIBRARIES core fuzzer_config
)

create_fuzz_test(PREFIX mp_datetime
                 SOURCES mp_datetime_fuzzer.c
                 LIBRARIES core fuzzer_config
)

add_custom_target(fuzzers
                  DEPENDS ${FUZZ_TEST_TARGETS}
                  COMMENT "Build fuzzers")
