	*** main_f ***
1..19
	*** raft_test_leader_election ***
    1..26
    ok 1 - 1 pending message at start
    ok 2 - trigger worked
    ok 3 - broadcast at start
    ok 4 - next event is leader death
    ok 5 - elections with a new term
    ok 6 - single vote for self
    ok 7 - trigger worked
    ok 8 - 2 records in the journal
    ok 9 - term is on disk
    ok 10 - vote is on disk
    ok 11 - 2 pending messages
    ok 12 - term bump is sent
    ok 13 - vote request is sent
    ok 14 - vote response from 2
    ok 15 - 2 votes - 1 self and 1 foreign
    ok 16 - no work to do - not enough votes yet
    ok 17 - still candidate, waiting for elections
    ok 18 - trigger is the same
    ok 19 - vote response from 3
    ok 20 - 2 votes - 1 self and 2 foreign
    ok 21 - became leader
    ok 22 - trigger worked
    ok 23 - no work - broadcast should be done
    ok 24 - no new rows in the journal - state change is not persisted
    ok 25 - 1 pending message
    ok 26 - sent new-leader notification
ok 1 - subtests
	*** raft_test_leader_election: done ***
	*** raft_test_recovery ***
    1..13
    ok 1 - became candidate
    ok 2 - remote checkpoint of a candidate
    ok 3 - local checkpoint of a candidate
    ok 4 - vote response from 2
    ok 5 - vote response from 3
    ok 6 - became leader
    ok 7 - election is finished
    ok 8 - remote checkpoint of a leader
    ok 9 - local checkpoint of a leader
    ok 10 - restart always as a follower
    ok 11 - vote count is restored correctly
    ok 12 - remote checkpoint of a leader
    ok 13 - local checkpoint of a leader
ok 2 - subtests
	*** raft_test_recovery: done ***
	*** raft_test_bad_msg ***
    1..11
    ok 1 - state can't be 0
    ok 2 - term from the bad message wasn't used
    ok 3 - node can't be a candidate but vote for another node
    ok 4 - term from the bad message wasn't used
    ok 5 - node can't be a candidate without vclock
    ok 6 - term from the bad message wasn't used
    ok 7 - term can't be 0
    ok 8 - bad state
    ok 9 - term from the bad message wasn't used
    ok 10 - bad negative state
    ok 11 - term from the bad message wasn't used
ok 3 - subtests
	*** raft_test_bad_msg: done ***
	*** raft_test_vote ***
    1..6
    ok 1 - vote request from 2
    ok 2 - voted for 2
    ok 3 - vote request from 3
    ok 4 - still kept vote for 2
    ok 5 - election timeout passed
    ok 6 - became candidate
ok 4 - subtests
	*** raft_test_vote: done ***
	*** raft_test_vote_skip ***
    1..39
    ok 1 - became candidate
    ok 2 - term is bumped
    ok 3 - message is accepted
    ok 4 - but ignored - too old term
    ok 5 - message is accepted
    ok 6 - but ignored - vote not for this node
    ok 7 - this node does not give up
    ok 8 - message is accepted
    ok 9 - term bump to be able to vote again
    ok 10 - message is accepted
    ok 11 - but ignored - node is disabled
    ok 12 - message is accepted
    ok 13 - term is bumped, but vote request is ignored
    ok 14 - message is accepted
    ok 15 - but ignored - vote works only on a candidate
    ok 16 - message is accepted
    ok 17 - but ignored - sender != vote, so it is not a request
    ok 18 - message is accepted
    ok 19 - leader is accepted
    ok 20 - message is accepted
    ok 21 - but ignored - leader is already known
    ok 22 - leader is not changed
    ok 23 - vclock is bumped
    ok 24 - message is accepted
    ok 25 - but ignored - vclock is too small
    ok 26 - new term
    ok 27 - leader is dropped in the new term
    ok 28 - message is accepted
    ok 29 - but ignored - vclock is incomparable
    ok 30 - message is accepted
    ok 31 - voted
    ok 32 - message is accepted
    ok 33 - but ignored - already voted in the term
    ok 34 - message is accepted
    ok 35 - but ignored - already voted in the term
    ok 36 - became candidate
    ok 37 - term is bumped
    ok 38 - message is accepted
    ok 39 - term is bumped and became candidate
ok 5 - subtests
	*** raft_test_vote_skip: done ***
	*** raft_test_vote_during_wal_write ***
    1..11
    ok 1 - became candidate
    ok 2 - vote response from 2
    ok 3 - vote response from 3
    ok 4 - became leader
    ok 5 - vote request in a new term but WAL is blocked
    ok 6 - canceled the vote for other node and voted for self
    ok 7 - became candidate
    ok 8 - term is 2
    ok 9 - term is 2
    ok 10 - volatile term is 3
    ok 11 - vote for self worked even though the WAL had non-empty queue
ok 6 - subtests
	*** raft_test_vote_during_wal_write: done ***
	*** raft_test_leader_resign ***
    1..24
    ok 1 - message is accepted
    ok 2 - leader is elected
    ok 3 - message is accepted
    ok 4 - leader has resigned
    ok 5 - became candidate
    ok 6 - message is accepted
    ok 7 - leader is elected
    ok 8 - message is accepted
    ok 9 - leader has resigned
    ok 10 - resign makes a broadcast
    ok 11 - still follower
    ok 12 - vote from 2
    ok 13 - vote from 3
    ok 14 - became leader
    ok 15 - the leader has resigned
    ok 16 - resign notification is sent
    ok 17 - new election is waiting for WAL write
    ok 18 - message is accepted
    ok 19 - the leader is accepted
    ok 20 - message is accepted
    ok 21 - the leader has resigned, new election is scheduled
    ok 22 - vote from 2
    ok 23 - vote from 3
    ok 24 - the leader is elected
ok 7 - subtests
	*** raft_test_leader_resign: done ***
	*** raft_test_split_brain ***
    1..4
    ok 1 - first leader notification
    ok 2 - leader is found
    ok 3 - second leader notification
    ok 4 - split brain, the old leader is kept
ok 8 - subtests
	*** raft_test_split_brain: done ***
	*** raft_test_heartbeat ***
    1..12
    ok 1 - leader notification
    ok 2 - follow the leader after notification
    ok 3 - leader notification
    ok 4 - follow the leader because no candidate
    ok 5 - follow the leader because had heartbeats
    ok 6 - death timeout passed
    ok 7 - enter candidate state when no heartbeats from the leader
    ok 8 - vote from 2
    ok 9 - vote from 3
    ok 10 - became leader
    ok 11 - message from leader
    ok 12 - nothing changed - waiting for WAL write
ok 9 - subtests
	*** raft_test_heartbeat: done ***
	*** raft_test_election_timeout ***
    1..13
    ok 1 - election is started
    ok 2 - enter candidate state
    ok 3 - new election is started
    ok 4 - but not too late
    ok 5 - re-enter candidate state
    ok 6 - still in the same term - new election timeout didn't expire
    ok 7 - new election timeout is respected
    ok 8 - but not too late
    ok 9 - re-enter candidate state
    ok 10 - the new timeout acts immediately
    ok 11 - re-enter candidate state
    ok 12 - term is bumped, timeout was truly random
    ok 13 - still candidate
ok 10 - subtests
	*** raft_test_election_timeout: done ***
	*** raft_test_election_quorum ***
    1..7
    ok 1 - enter candidate state
    ok 2 - still candidate
    ok 3 - send vote response from second node
    ok 4 - vote is accepted
    ok 5 - but still candidate
    ok 6 - enter leader state after another quorum lowering
    ok 7 - became leader again immediately with 1 self vote
ok 11 - subtests
	*** raft_test_election_quorum: done ***
	*** raft_test_death_timeout ***
    1..9
    ok 1 - leader notification
    ok 2 - follow the leader
    ok 3 - the leader still is considered alive
    ok 4 - enter candidate state when the new death timeout expires
    ok 5 - message from leader
    ok 6 - leader is accepted
    ok 7 - became follower
    ok 8 - death is detected immediately
    ok 9 - enter candidate state
ok 12 - subtests
	*** raft_test_death_timeout: done ***
	*** raft_test_enable_disable ***
    1..11
    ok 1 - accepted a leader notification
    ok 2 - leader is seen
    ok 3 - death timeout passed
    ok 4 - became candidate
    ok 5 - nothing changed
    ok 6 - vote from 2
    ok 7 - vote from 3
    ok 8 - became leader
    ok 9 - resigned from leader state
    ok 10 - nothing changed
    ok 11 - term bump when disabled
ok 13 - subtests
	*** raft_test_enable_disable: done ***
	*** raft_test_too_long_wal_write ***
    1..22
    ok 1 - vote for 2
    ok 2 - vote is volatile
    ok 3 - message from leader
    ok 4 - leader is known
    ok 5 - nothing changed
    ok 6 - wal write is finished
    ok 7 - timer works again
    ok 8 - became candidate
    ok 9 - term is bumped
    ok 10 - 2 votes for 3 in a new term
    ok 11 - term is old
    ok 12 - vote is used for self
    ok 13 - volatile term is new
    ok 14 - volatile vote is unused
    ok 15 - new election timeout works
    ok 16 - new term is started with vote for self
    ok 17 - term is old
    ok 18 - vote is unused
    ok 19 - volatile term is new
    ok 20 - volatile vote is self
    ok 21 - new election timeout works
    ok 22 - new term is started with vote for self
ok 14 - subtests
	*** raft_test_too_long_wal_write: done ***
	*** raft_test_promote_restore ***
    1..12
    ok 1 - became leader after promotion
    ok 2 - restore drops a non-candidate leader to a follower
    ok 3 - became leader after promotion
    ok 4 - is a candidate
    ok 5 - vote request from 2
    ok 6 - demote once new election starts
    ok 7 - is not a candidate after term bump
    ok 8 - still follower
    ok 9 - still the same term
    ok 10 - still old term
    ok 11 - not a candidate
    ok 12 - not a candidate
ok 15 - subtests
	*** raft_test_promote_restore: done ***
	*** raft_test_bump_term_before_cfg ***
    1..6
    ok 1 - new term is started with vote for self
    ok 2 - recovered
    ok 3 - instance id is unknown
    ok 4 - bump term externally
    ok 5 - term write is in progress
    ok 6 - started new term
ok 16 - subtests
	*** raft_test_bump_term_before_cfg: done ***
	*** raft_test_split_vote ***
    1..64
    ok 1 - elections with a new term
    ok 2 - vote response for 1 from 2
    ok 3 - vote response for 3 from 3
    ok 4 - term timeout >= election timeout normally
    ok 5 - vote response for 3 from 4
    ok 6 - split vote reduced the term timeout
    ok 7 - a new term
    ok 8 - timeout is normal again
    ok 9 - is candidate
    ok 10 - voted for self
    ok 11 - vote response for 2 from 2
    ok 12 - the vote is not split yet
    ok 13 - cluster size change makes split vote
    ok 14 - a new term
    ok 15 - vote response for 2 from 2
    ok 16 - message is accepted
    ok 17 - other node's leadership is accepted
    ok 18 - the only own vote was from self
    ok 19 - cluster change does not affect the leader's death waiting
    ok 20 - vote response for 2 from 2
    ok 21 - vote response for 3 from 3
    ok 22 - voter couldn't schedule new term
    ok 23 - bump term
    ok 24 - vote for self
    ok 25 - vote response for 2 from 2
    ok 26 - split vote is already inevitable
    ok 27 - vote response for 3 from 3
    ok 28 - split vote got worse, but delay didn't change
    ok 29 - old term
    ok 30 - unused vote
    ok 31 - new volatile term
    ok 32 - new volatile vote
    ok 33 - vote response for 2 from 2
    ok 34 - new term
    ok 35 - voted for self
    ok 36 - volatile term
    ok 37 - volatile vote
    ok 38 - found split vote after WAL write
    ok 39 - bump term
    ok 40 - vote for self
    ok 41 - bump term
    ok 42 - vote for self
    ok 43 - vote response for 2 from 2
    ok 44 - split vote is not checked for cluster < quorum
    ok 45 - bump term
    ok 46 - vote for self
    ok 47 - vote response for 2 from 2
    ok 48 - vote response for 2 from 3
    ok 49 - vote response for 3 from 4
    ok 50 - vote response for 4 from 5
    ok 51 - split vote is not checked when vote count > cluster size
    ok 52 - bump term
    ok 53 - vote for self
    ok 54 - vote response for 2 from 2
    ok 55 - not split vote yet
    ok 56 - split vote after quorum increase
    ok 57 - bump term
    ok 58 - vote for self
    ok 59 - bump term
    ok 60 - vote for self
    ok 61 - vote response for 2 from 2
    ok 62 - planned new election after yield
    ok 63 - vote response for 3 from 3
    ok 64 - still waiting for yield
ok 17 - subtests
	*** raft_test_split_vote: done ***
	*** raft_test_pre_vote ***
    1..43
    ok 1 - leader notification
    ok 2 - WAL write is in progress
    ok 3 - leader just appeared
    ok 4 - leader_idle increased
    ok 5 - heartbeat resets idle counter during WAL write
    ok 6 - WAL write finished
    ok 7 - leader_idle increased
    ok 8 - heartbeat resets idle counter when no WAL write
    ok 9 - voter tracks leader death
    ok 10 - leader still remembered
    ok 11 - idle increased
    ok 12 - timed out
    ok 13 - heartbeat resets idle
    ok 14 - heartbeat restarts timer
    ok 15 - leader seen notification accepted
    ok 16 - leader not seen
    ok 17 - timed out
    ok 18 - no elections when leader seen indirectly
    ok 19 - leader not seen notification accepted
    ok 20 - elections once no one sees the leader
    ok 21 - become leader on quorum change
    ok 22 - cfg_is_candidate_later doesn't disrupt leader
    ok 23 - accept term bump
    ok 24 - term bump after cfg_is_candidate_later makes node a voter.
    ok 25 - cfg_is_candidate_later doesn't transfer voter to a candidate
    ok 26 - accept term bump
    ok 27 - Term bump with cfg_is_candidate_later transfers voter to candiate
    ok 28 - leader_idle is zero on the current leader
    ok 29 - leader_idle counts from 0 on a previous leader
    ok 30 - leader is seen message accepted when raft disabled
    ok 31 - who sees leader is tracked on disabled node
    ok 32 - disabled node doesn't wait for anything
    ok 33 - no elections on start when someone sees the leader
    ok 34 - nothing to wait for as long as someone sees the leader
    ok 35 - no elections on becoming candidate when someone sees the leader
    ok 36 - nothing to wait for as long as someone sees the leader
    ok 37 - leader is accepted
    ok 38 - timed out
    ok 39 - No timer re-start on death timeout reconfig when already timed-out
    ok 40 - vote for 2
    ok 41 - leader accepted
    ok 42 - leader seen notification accepted
    ok 43 - No timer re_start on election timeout reconfig when it's not time for elections yet
ok 18 - subtests
	*** raft_test_pre_vote: done ***
	*** raft_test_resign ***
    1..2
    ok 1 - became leader
    ok 2 - resigned from leader state
ok 19 - subtests
	*** raft_test_resign: done ***
	*** main_f: done ***
