env = require('test_run')
---
...
test_run = env.new()
---
...
--
-- Restart the server because need to reset quota used memory
-- after previous tests.
--
test_run:cmd('restart server default')
--
-- gh-1863 add BPS tree extents to memory quota
--
box.stat.vinyl().memory.level0
---
- 0
...
space = box.schema.space.create('test', { engine = 'vinyl' })
---
...
pk = space:create_index('pk')
---
...
sec = space:create_index('sec', { parts = {2, 'unsigned'} })
---
...
space:insert({1, 1})
---
- [1, 1]
...
box.stat.vinyl().memory.level0
---
- 98336
...
space:insert({1, 1})
---
- error: Duplicate key exists in unique index "pk" in space "test" with old tuple
    - [1, 1] and new tuple - [1, 1]
...
box.stat.vinyl().memory.level0
---
- 98336
...
space:update({1}, {{'!', 1, 100}}) -- try to modify the primary key
---
- error: Attempt to modify a tuple field which is part of primary index in space 'test'
...
box.stat.vinyl().memory.level0
---
- 98336
...
space:insert({2, 2})
---
- [2, 2]
...
space:insert({3, 3})
---
- [3, 3]
...
space:insert({4, 4})
---
- [4, 4]
...
box.stat.vinyl().memory.level0
---
- 98431
...
box.snapshot()
---
- ok
...
box.stat.vinyl().memory.level0
---
- 0
...
space:select{}
---
- - [1, 1]
  - [2, 2]
  - [3, 3]
  - [4, 4]
...
box.stat.vinyl().memory.level0
---
- 0
...
_ = space:replace{1, 1, string.rep('a', 1024 * 1024 * 5)}
---
...
box.stat.vinyl().memory.level0
---
- 5292072
...
space:drop()
---
...
--
-- gh-2634: check that box.cfg.vinyl_memory can be increased
--
test_run:cmd("create server test with script='vinyl/low_quota.lua'")
---
- true
...
test_run:cmd(string.format("start server test with args='%d'", 1024 * 1024))
---
- true
...
test_run:cmd('switch test')
---
- true
...
s = box.schema.space.create('test', {engine = 'vinyl'})
---
...
_ = s:create_index('pk')
---
...
count = 20
---
...
pad = string.rep('x', 100 * 1024)
---
...
box.cfg.vinyl_memory
---
- 1048576
...
for i = 1, count do s:replace{i, pad} end -- triggers dump
---
...
box.stat.vinyl().memory.level0 < count * pad:len()
---
- true
...
box.snapshot()
---
- ok
...
box.cfg{vinyl_memory = 8 * 1024 * 1024}
---
...
box.cfg.vinyl_memory
---
- 8388608
...
for i = 1, count do s:replace{i, pad} end -- does not trigger dump
---
...
box.stat.vinyl().memory.level0 > count * pad:len()
---
- true
...
box.cfg{vinyl_memory = 4 * 1024 * 1024} -- error: decreasing vinyl_memory is not allowed
---
- error: 'Incorrect value for option ''vinyl_memory'': cannot decrease memory size
    at runtime'
...
box.cfg.vinyl_memory
---
- 8388608
...
test_run:cmd('switch default')
---
- true
...
test_run:cmd("stop server test")
---
- true
...
test_run:cmd("cleanup server test")
---
- true
...
