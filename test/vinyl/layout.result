test_run = require('test_run').new()
---
...
test_run:cmd('restart server default with cleanup=1')
fiber = require 'fiber'
---
...
fio = require 'fio'
---
...
xlog = require 'xlog'
---
...
fun = require 'fun'
---
...
space = box.schema.space.create('test', {engine = 'vinyl', defer_deletes = true})
---
...
_ = space:create_index('pk', {parts = {{1, 'string', collation = 'unicode'}}, run_count_per_level=3})
---
...
_ = space:create_index('sk', {parts = {{2, 'unsigned'}}, run_count_per_level=3})
---
...
-- Empty run
space:insert{'ЁЁЁ', 777}
---
- ['ЁЁЁ', 777]
...
space:delete{'ЁЁЁ'}
---
...
box.snapshot()
---
- ok
...
space.index.sk:alter{parts = {{2, 'unsigned', is_nullable = true}}}
---
...
space:replace{'ЭЭЭ', box.NULL}
---
- ['ЭЭЭ', null]
...
space:replace{'эээ', box.NULL}
---
- ['эээ', null]
...
space:replace{'ёёё', box.NULL}
---
- ['ёёё', null]
...
-- Some padding to prevent last-level compaction (gh-3657).
for i = 1001, 1010 do space:replace{tostring(i), i} end
---
...
box.snapshot()
---
- ok
...
space:replace{'ёёё', 123}
---
- ['ёёё', 123]
...
space:replace{'ЮЮЮ', 456}
---
- ['ЮЮЮ', 456]
...
space:replace{'ююю', 789}
---
- ['ююю', 789]
...
box.snapshot()
---
- ok
...
space:drop()
---
...
-- Get the list of files from the last checkpoint.
-- convert names to relative
-- work_dir = fio.cwd()
files = box.backup.start()
---
...
-- use abspath to work correclty with symlinks
-- for i, name in pairs(files) do files[i] = fio.abspath(files[i]):sub(#work_dir + 2) end
table.sort(files)
---
...
-- files
result = {}
---
...
test_run:cmd("setopt delimiter ';'")
---
- true
...
for i, path in pairs(files) do
    local suffix = string.gsub(path, '.*%.', '')
    if suffix ~= 'snap' and suffix ~= 'xlog' then
        local rows = {}
        local i = 1
        for lsn, row in xlog.pairs(path) do
            if row.BODY.bloom_filter ~= nil then
                row.BODY.bloom_filter = '<bloom_filter>'
            end
            rows[i] = row
            i = i + 1
        end
        table.insert(result, { fio.basename(path), rows })
    end
end;
---
...
test_run:cmd("setopt delimiter ''");
---
- true
...
box.backup.stop() -- resume the garbage collection process
---
...
test_run:cmd("push filter 'timestamp: .*' to 'timestamp: <timestamp>'")
---
- true
...
test_run:cmd("push filter 'offset: .*' to 'offset: <offset>'")
---
- true
...
test_run:cmd("push filter 'data: .*' to 'data: <data>'")
---
- true
...
result
---
- - - 00000000000000000019.vylog
    - - HEADER:
          type: INSERT
        BODY:
          tuple: [0, {6: 512, 7: [{'field': 0, 'sort_order': 'asc', 'collation': 1,
                  'type': 'string'}], 9: 19, 12: 2, 13: 6}]
      - HEADER:
          type: INSERT
        BODY:
          tuple: [5, {2: 8, 16: 1, 9: 19}]
      - HEADER:
          type: INSERT
        BODY:
          tuple: [4, {2: 5}]
      - HEADER:
          type: INSERT
        BODY:
          tuple: [6, {2: 5}]
      - HEADER:
          type: INSERT
        BODY:
          tuple: [2, {1: 1}]
      - HEADER:
          type: INSERT
        BODY:
          tuple: [8, {1: 1, 2: 8, 8: 9}]
      - HEADER:
          type: INSERT
        BODY:
          tuple: [0, {0: 2, 5: 1, 6: 512, 7: [{'field': 1, 'sort_order': 'asc', 'is_nullable': true,
                  'type': 'unsigned'}], 9: 19, 12: 3, 13: 6}]
      - HEADER:
          type: INSERT
        BODY:
          tuple: [5, {0: 2, 2: 6, 16: 1, 9: 19}]
      - HEADER:
          type: INSERT
        BODY:
          tuple: [4, {0: 2, 2: 4}]
      - HEADER:
          type: INSERT
        BODY:
          tuple: [6, {2: 4}]
      - HEADER:
          type: INSERT
        BODY:
          tuple: [2, {0: 2, 1: 3}]
      - HEADER:
          type: INSERT
        BODY:
          tuple: [8, {1: 3, 2: 6, 8: 7}]
      - HEADER:
          type: INSERT
        BODY:
          tuple: [11, {}]
      - HEADER:
          timestamp: <timestamp>
          type: INSERT
        BODY:
          tuple: [7, {2: 5}]
      - HEADER:
          timestamp: <timestamp>
          type: INSERT
        BODY:
          tuple: [7, {2: 4}]
      - HEADER:
          timestamp: <timestamp>
          type: INSERT
        BODY:
          tuple: [4, {0: 2, 2: 10}]
      - HEADER:
          timestamp: <timestamp>
          type: INSERT
        BODY:
          tuple: [5, {0: 2, 2: 10, 16: 1, 9: 22}]
      - HEADER:
          timestamp: <timestamp>
          type: INSERT
        BODY:
          tuple: [8, {1: 3, 2: 10, 8: 11}]
      - HEADER:
          timestamp: <timestamp>
          type: INSERT
        BODY:
          tuple: [10, {0: 2, 9: 22}]
      - HEADER:
          timestamp: <timestamp>
          type: INSERT
        BODY:
          tuple: [4, {2: 12}]
      - HEADER:
          timestamp: <timestamp>
          type: INSERT
        BODY:
          tuple: [5, {2: 12, 16: 1, 9: 22}]
      - HEADER:
          timestamp: <timestamp>
          type: INSERT
        BODY:
          tuple: [8, {1: 1, 2: 12, 8: 13}]
      - HEADER:
          timestamp: <timestamp>
          type: INSERT
        BODY:
          tuple: [10, {9: 22}]
  - - 00000000000000000008.index
    - - HEADER:
          type: RUNINFO
        BODY:
          min_lsn: 7
          bloom_filter: <bloom_filter>
          max_key: ['ЭЭЭ']
          page_count: 1
          stmt_stat: {9: 0, 2: 0, 5: 0, 3: 13}
          max_lsn: 19
          min_key: ['1001']
      - HEADER:
          type: PAGEINFO
        BODY:
          row_index_offset: <offset>
          offset: <offset>
          size: 286
          unpacked_size: 267
          row_count: 13
          min_key: ['1001']
  - - 00000000000000000008.run
    - - HEADER:
          lsn: 10
          type: REPLACE
        BODY:
          tuple: ['1001', 1001]
      - HEADER:
          lsn: 11
          type: REPLACE
        BODY:
          tuple: ['1002', 1002]
      - HEADER:
          lsn: 12
          type: REPLACE
        BODY:
          tuple: ['1003', 1003]
      - HEADER:
          lsn: 13
          type: REPLACE
        BODY:
          tuple: ['1004', 1004]
      - HEADER:
          lsn: 14
          type: REPLACE
        BODY:
          tuple: ['1005', 1005]
      - HEADER:
          lsn: 15
          type: REPLACE
        BODY:
          tuple: ['1006', 1006]
      - HEADER:
          lsn: 16
          type: REPLACE
        BODY:
          tuple: ['1007', 1007]
      - HEADER:
          lsn: 17
          type: REPLACE
        BODY:
          tuple: ['1008', 1008]
      - HEADER:
          lsn: 18
          type: REPLACE
        BODY:
          tuple: ['1009', 1009]
      - HEADER:
          lsn: 19
          type: REPLACE
        BODY:
          tuple: ['1010', 1010]
      - HEADER:
          lsn: 9
          type: REPLACE
        BODY:
          tuple: ['ёёё', null]
      - HEADER:
          lsn: 8
          type: REPLACE
        BODY:
          tuple: ['эээ', null]
      - HEADER:
          lsn: 7
          type: REPLACE
        BODY:
          tuple: ['ЭЭЭ', null]
      - HEADER:
          type: ROWINDEX
        BODY:
          data: <data>
  - - 00000000000000000012.index
    - - HEADER:
          type: RUNINFO
        BODY:
          min_lsn: 20
          bloom_filter: <bloom_filter>
          max_key: ['ЮЮЮ']
          page_count: 1
          stmt_stat: {9: 0, 2: 0, 5: 0, 3: 3}
          max_lsn: 22
          min_key: ['ёёё']
      - HEADER:
          type: PAGEINFO
        BODY:
          row_index_offset: <offset>
          offset: <offset>
          size: 102
          unpacked_size: 83
          row_count: 3
          min_key: ['ёёё']
  - - 00000000000000000012.run
    - - HEADER:
          lsn: 20
          type: REPLACE
        BODY:
          tuple: ['ёёё', 123]
          tuple_meta: {1: 1}
      - HEADER:
          lsn: 22
          type: REPLACE
        BODY:
          tuple: ['ююю', 789]
          tuple_meta: {1: 1}
      - HEADER:
          lsn: 21
          type: REPLACE
        BODY:
          tuple: ['ЮЮЮ', 456]
          tuple_meta: {1: 1}
      - HEADER:
          type: ROWINDEX
        BODY:
          data: <data>
  - - 00000000000000000006.index
    - - HEADER:
          type: RUNINFO
        BODY:
          min_lsn: 7
          bloom_filter: <bloom_filter>
          max_key: [1010, '1010']
          page_count: 1
          stmt_stat: {9: 0, 2: 0, 5: 0, 3: 13}
          max_lsn: 19
          min_key: [null, 'ёёё']
      - HEADER:
          type: PAGEINFO
        BODY:
          row_index_offset: <offset>
          offset: <offset>
          size: 286
          unpacked_size: 267
          row_count: 13
          min_key: [null, 'ёёё']
  - - 00000000000000000006.run
    - - HEADER:
          lsn: 9
          type: REPLACE
        BODY:
          tuple: [null, 'ёёё']
      - HEADER:
          lsn: 8
          type: REPLACE
        BODY:
          tuple: [null, 'эээ']
      - HEADER:
          lsn: 7
          type: REPLACE
        BODY:
          tuple: [null, 'ЭЭЭ']
      - HEADER:
          lsn: 10
          type: REPLACE
        BODY:
          tuple: [1001, '1001']
      - HEADER:
          lsn: 11
          type: REPLACE
        BODY:
          tuple: [1002, '1002']
      - HEADER:
          lsn: 12
          type: REPLACE
        BODY:
          tuple: [1003, '1003']
      - HEADER:
          lsn: 13
          type: REPLACE
        BODY:
          tuple: [1004, '1004']
      - HEADER:
          lsn: 14
          type: REPLACE
        BODY:
          tuple: [1005, '1005']
      - HEADER:
          lsn: 15
          type: REPLACE
        BODY:
          tuple: [1006, '1006']
      - HEADER:
          lsn: 16
          type: REPLACE
        BODY:
          tuple: [1007, '1007']
      - HEADER:
          lsn: 17
          type: REPLACE
        BODY:
          tuple: [1008, '1008']
      - HEADER:
          lsn: 18
          type: REPLACE
        BODY:
          tuple: [1009, '1009']
      - HEADER:
          lsn: 19
          type: REPLACE
        BODY:
          tuple: [1010, '1010']
      - HEADER:
          type: ROWINDEX
        BODY:
          data: <data>
  - - 00000000000000000010.index
    - - HEADER:
          type: RUNINFO
        BODY:
          min_lsn: 20
          bloom_filter: <bloom_filter>
          max_key: [789, 'ююю']
          page_count: 1
          stmt_stat: {9: 0, 2: 0, 5: 0, 3: 3}
          max_lsn: 22
          min_key: [123, 'ёёё']
      - HEADER:
          type: PAGEINFO
        BODY:
          row_index_offset: <offset>
          offset: <offset>
          size: 90
          unpacked_size: 71
          row_count: 3
          min_key: [123, 'ёёё']
  - - 00000000000000000010.run
    - - HEADER:
          lsn: 20
          type: REPLACE
        BODY:
          tuple: [123, 'ёёё']
      - HEADER:
          lsn: 21
          type: REPLACE
        BODY:
          tuple: [456, 'ЮЮЮ']
      - HEADER:
          lsn: 22
          type: REPLACE
        BODY:
          tuple: [789, 'ююю']
      - HEADER:
          type: ROWINDEX
        BODY:
          data: <data>
...
test_run:cmd("clear filter")
---
- true
...
